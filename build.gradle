buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.1.4'
        classpath 'org.yaml:snakeyaml:1.19'

    }
}

plugins {
    id 'idea'
    id 'java'
    id 'org.liquibase.gradle' version '1.2.4'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
    id 'war'
}

group = 'com.github.eendroroy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

configurations {
	providedRuntime
}

Properties springProperties = new Properties()
springProperties.load(project.file("$projectDir/src/main/resources/application.properties").newDataInputStream())


liquibase {
    activities {
        main {
            changeLogFile "$projectDir/src/main/resources/db/changelog/db.changelog-master.yaml"
            url springProperties.getProperty('liquibase.url')
            username springProperties.getProperty('liquibase.user')
            password springProperties.getProperty('liquibase.password')
        }
    }
}

dependencies {
	compile("org.liquibase:liquibase-core")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude module: "spring-boot-starter-tomcat"
	}
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')

	compileOnly('org.projectlombok:lombok')

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
